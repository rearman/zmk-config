/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define TT(layer) &mo_tog layer layer

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <150>;
};

/ {
behaviors {
		 mo_tog: behavior_mo_tog {
		 compatible = "zmk,behavior-hold-tap";
		 label = "mo_tog";
		 #binding-cells = <2>;
		 flavor = "hold-preferred";
		 tapping-term-ms = <150>;
		 bindings = <&mo>, <&tog>;
		 };
		 lpbk: lpar_bkt {
		 compatible = "zmk,behavior-mod-morph";
		 label = "LPAR_BKT";
		 #binding-cells = <0>;
		 bindings = <&kp LPAR>, <&kp LBKT>;
		 mods = <(MOD_LSFT|MOD_RSFT)>;
		 };
		 rpbk: rpar_bkt {
		 compatible = "zmk,behavior-mod-morph";
		 label = "RPAR_BKT";
		 #binding-cells = <0>;
		 bindings = <&kp RPAR>, <&kp RBKT>;
		 mods = <(MOD_LSFT|MOD_RSFT)>;
		 };
		 cb9: nine_cbk {
		 compatible = "zmk,behavior-mod-morph";
		 label = "NINE_CBK";
		 #binding-cells = <0>;
		 bindings = <&kp N9>, <&kp LBRC>;
		 mods = <(MOD_LSFT|MOD_RSFT)>;
		 };
		 cb0: zero_cbk {
		 compatible = "zmk,behavior-mod-morph";
		 label = "ZERO_CBK";
		 #binding-cells = <0>;
		 bindings = <&kp N0>, <&kp RBRC>;
		 mods = <(MOD_LSFT|MOD_RSFT)>;
		 };
		 };

	keymap {
		compatible = "zmk,keymap";

		default_layer {
// .-----------------------------------.     .-----------------------------------.
// | ESC |  Q  |  W  |  E  |  R  |  T  |     |  Y  |  U  |  I  |  O  |  P  |  -  |
// |-----+-----+-----+-----+-----+-----|     |-----+-----+-----+-----+-----+-----|
// |  =  |  A  |  S  |  D  |  F  |  G  |     |  H  |  J  |  K  |  L  |  ;  |  '  |
// |-----+-----+-----+-----+-----+-----|     |-----+-----+-----+-----+-----+-----|
// |  (  |  Z  |  X  |  C  |  V  |  B  |     |  N  |  M  |  ,  |  .  |  /  |  )  |
// '-----------------+-----+-----+-----|     |-----+-----+-----+-----------------'
//                   | TAB | LYR | BKS |     | SPC | LYR | RET |
//		     '-----------------'     '-----------------'
			bindings = <
 &mt LALT ESC   &kp Q &kp W &kp E   &kp R &kp T    &kp Y     &kp U &kp I     &kp O   &kp P    &mt RALT MINUS
 &mt LCTL EQUAL &kp A &kp S &kp D   &kp F &kp G    &kp H     &kp J &kp K     &kp L   &kp SEMI &mt RCTL SQT
 &mt LSFT &lpbk &kp Z &kp X &kp C   &kp V &kp B    &kp N     &kp M &kp COMMA &kp DOT &kp FSLH &mt RSFT &rpbk
			    &kp TAB TT(1) &kp BSPC &kp SPACE TT(2) &kp RET
			>;
		};

		num_layer {
			bindings = <
 &trans &none &none &none  &none  &none   &none  &kp N7 &kp N8  &cb9   &none     &trans
 &trans &none &none &none  TT(3)  &none   &none  &kp N4 &kp N5  &kp N6 &kp GRAVE &trans
 &trans &none &none &none  &none  &none   &none  &kp N1 &kp N2  &kp N3 &kp BSLH  &trans
		    &trans &trans &kp DEL &trans &cb0   &kp DOT
			>;

		};

		nav_layer {
			bindings = <
 &trans &none     &kp LGUI &none    &none  &none   &none  &kp HOME &kp UP   &kp PG_UP &kp PSCRN &trans
 &trans &kp K_APP &kp INS  &none    &none  &none   &none  &kp LEFT &none    &kp RIGHT &none     &trans
 &trans &none     &none    &kp CAPS &none  &none   &none  &kp END  &kp DOWN &kp PG_DN &none     &trans
			   &trans   &trans &kp DEL &trans &trans   &trans
			>;

		};

		fun_layer {
			bindings = <
 &trans &none &none &none  &none  &none  &none  &kp F7 &kp F8 &kp F9 &kp F10 &trans
 &trans &none &none &none  &trans &none  &none  &kp F4 &kp F5 &kp F6 &kp F11 &trans
 &trans &none &none &none  &none  &none  &none  &kp F1 &kp F2 &kp F3 &kp F12 &trans
		    &trans &trans &trans &trans &trans &trans
			>;

		};
	};
};
