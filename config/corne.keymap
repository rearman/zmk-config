/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 * 
 */
 
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
	flavor = "tap-preferred";
	tapping_term_ms = <160>;
};

/ {	
	behaviors {
		tt: behavior_mo_tog {
			compatible = "zmk,behavior-hold-tap";
			label = "mo_tog";
			#binding-cells = <2>;
			flavor = "hold-preferred";
			tapping-term-ms = <150>;
			bindings = <&mo>, <&tog>;
		};
		ml: behavior_mod_tog {
			compatible = "zmk,behavior-hold-tap";
			label = "mod_tog";
			#binding-cells = <2>;
			flavor = "hold-preferred";
			tapping-term-ms = <160>;
			bindings = <&kp>, <&tog>;
		};
		cosc: coln_scln {
			compatible = "zmk,behavior-mod-morph";
			label = "COLN_SCLN";
			#binding-cells = <0>;
			bindings = <&kp COLON>, <&kp SEMI>;
			mods = <(MOD_LSFT|MOD_RSFT)>;
		};
		lh: lh_home_row {
			compatible = "zmk, behavior-hold-tap";
			label = "LEFT_POSITIONAL_HOLD_TAP";
			#binding-cells = <2>;
			flavor = "tap-unless-interrupted";
			tapping-term-ms = <100>;
			quick-tap-ms = <200>;
			bindings = <&kp>, <&kp>;
			hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
		};
		rh: rh_home_row {
			compatible = "zmk, behavior-hold-tap";
			label = "RIGHT_POSITIONAL_HOLD_TAP";
			#binding-cells = <2>;
			flavor = "tap-unless-interrupted";
			tapping-term-ms = <100>;
			quick-tap-ms = <200>;
			bindings = <&kp>, <&kp>;
			hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
		}
	};

	keymap {
		compatible = "zmk,keymap";
/*
 * RAISE (NAV) LAYER
 *	---	XXX	HOM	UP	PUP	XXX		XXX	HOM	UP	PUP	CAP	---
 *	---	XXX	LT	APP	RT	INS		XXX	LT	APP	RT	PSC	---
 *	---	GUI	END	DN	PDN	XXX		XXX	END	DN	PDN	GUI	---
 *				---	---	---		---	LYR	---
 *
 * DEFAULT LAYER
 *	TAB	'	,	.	P	Y		F	G	C	R	L	/
 *	=	A	O	E	U	I		D	H	T	N	S	-
 *	`	;	Q	J	K	X		B	M	W	V	Z	\
 *				ESC	DEL	SPC		SPC	BSP	RET
 *
 * LOWER (NUM) LAYER
 *	---	[	9	8	7	]		[	7	8	9	]	---
 *	---	(	6	5	4	)		(	4	5	6	)	---
 *	---	{	3	2	1	}		{	1	2	3	}	---
 *				.	0	---		---	0	.
 *
 * ADJUST (FUN) LAYER
 *	---	F1	F2	F3	F4	XXX		XXX	F1	F2	F3	F4	---
 *	---	F5	F6	F7	F8	XXX		XXX	F5	F6	F7	F8	---
 *	---	F9	F10	F11	F12	XXX		XXX	F9	F10	F11	F12	---
 *				---	---	---		---	---	---
 */
		default_layer {
			label = "BASE";
			bindings = <
				&lt 3 TAB		&kp SQT	&kp COMMA	&kp DOT	&kp P	&kp Y	&kp F	&kp G	&kp C	&kp R	&kp L	&lt 3 FSLH
				&lt 1 EQUAL	&lh LGUI A	&lh LALT O		&lh LCTL E	&lh LSHFT U	&kp I	&kp D	&rh RSHFT H	&rh RCTL T	&rh RALT N	&rh RGUI S	&lt 1 MINUS
				&lt 2 GRAVE	&cosc	&kp Q		&kp J	&kp K	&kp X	&kp B	&kp M	&kp W	&kp V	&kp Z	&lt 2 BSLH
				&mt LALT ESC	&mt LCTL BSPC	&mt LSHFT SPACE	&mt RSHFT SPACE	&mt RCTL DEL	&mt RALT RET
			>;
		};
		num_layer {
			label = "NUM";
			bindings = <
				&trans	&kp LBKT		&kp N9	&kp N8	&kp N7	&kp RBKT	&kp LBKT		&kp N7	&kp N8	&kp N9	&kp RBKT	&trans
				&trans	&lh LGUI LPAR		&lh LALT N6	&lh LCTL N5	&lh LSHFT N4	&kp RPAR	&kp LPAR		&rh RSHFT N4	&rh RCTL N5	&rh RALT N6	&rh RGUI RPAR	&trans
				&trans	&kp LBRC	&kp N3	&kp N2	&kp N1	&kp RBRC	&kp LBRC	&kp N1	&kp N2	&kp N3	&kp RBRC 	&trans
				&mt LALT DOT	&mt LCTL N0	&trans	&trans	&mt RCTL N0	&mt RALT DOT	
			>;
		};
		nav_layer {
			label = "NAV";
			bindings = <
				&trans	&none	&kp HOME	&kp UP		&kp PG_UP	&none	&none	&kp HOME	&kp UP		&kp PG_UP	&kp CAPS	&trans
				&trans	&none	&kp LEFT		&kp K_APP	&kp RIGHT	&kp INS	&none	&kp LEFT		&kp K_APP	&kp RIGHT	&kp PSCRN	&trans
				&trans	&kp LGUI	&kp END		&kp DOWN	&kp PG_DN	&none	&none	&kp END		&kp DOWN	&kp PG_DN	&kp RGUI		&trans
				&trans	&trans	&trans	&trans	&trans	&trans
			>;
		};
		func_layer {
			label = "FUN";
			bindings = <
				&trans	&kp F1	&kp F2	&kp F3	&kp F4	&none	&none	&kp F1	&kp F2	&kp F3	&kp F4	&trans
				&trans	&kp F5	&kp F6	&kp F7	&kp F8	&none	&none	&kp F5	&kp F6	&kp F7	&kp F8	&trans
				&trans	&kp F9	&kp F10	&kp F11	&kp F12	&none	&none	&kp F9	&kp F10	&kp F11	&kp F12	&trans
				&trans	&trans	&trans	&trans	&trans	&trans
			>;
		};
	};
}; 	
