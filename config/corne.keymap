/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define TT(layer) &mo_tog layer layer

&mt {
	flavor = "tap-preferred";
	tapping_term_ms = <150>;
};

/ {
	behaviors {
		mo_tog: behavior_mo_tog {
			compatible = "zmk,behavior-hold-tap";
			label = "mo_tog";
			#binding-cells = <2>;
			flavor = "hold-preferred";
			tapping-term-ms = <150>;
			bindings = <&mo>, <&tog>;
		};
		cosc: coln_scln {
			compatible = "zmk,behavior-mod-morph";
			label = "COLN_SCLN";
			#binding-cells = <0>;
			bindings = <&kp COLON>, <&kp SEMI>;
			mods = <(MOD_LSFT|MOD_RSFT)>;
		};
	};

	keymap {
		compatible = "zmk,keymap";

// .-----------------------------------------------.       .-----------------------------------------------.
// |       |  F01  |  F02  |  F03  |  F04  |  PSC  |  NAV  |       |  HOM  |  UPA  |  PUP  |       |       |
// |  TAB  |   '   |   ,   |   .   |   P   |   Y   |  DEF  |   F   |   G   |   C   |   R   |   L   |   /   |
// |       |   `   |       |   [   |   ]   |       |  NUM  |       |   7   |   8   |   9   |       |   \   |
// |-------+-------+-------+-------+-------+-------|       |-------+-------+-------+-------+-------+-------|
// |       |  F05  |  F06  |  F07  |  F08  |  INS  |  NAV  |       |  LFT  |  APP  |  RHT  |       |       |
// |   =   |   A   |   O   |   E   |   U   |   I   |  DEF  |   D   |   H   |   T   |   N   |   S   |   -   |
// |       |       |       |   (   |   )   |       |  NUM  |       |   4   |   5   |   6   |       |       |
// |-------+-------+-------+-------+-------+-------|       |-------+-------+-------+-------+-------+-------|
// |       |  F09  |  F10  |  F11  |  F12  |       |  NAV  |       |  END  |  DNA  |  PDN  |       |       |
// |  CAP  |   :   |   Q   |   J   |   K   |   X   |  DEF  |   B   |   M   |   W   |   V   |   Z   |  CAP  |
// |       |       |       |   {   |   }   |       |  NUM  |       |   1   |   2   |   3   |       |       |
// '-----------------------+-------+-------+-------|       |-------+-------+-------+-----------------------'
//                         |       |       |  DEL  |  NAV  |       |  LYR  |       |
//                         |  ESC  |  LWR  |  BKS  |  DEF  |  SPC  |  RSE  |  RET  |
//                         |       |  LYR  |       |  NUM  |       |   0   |   .   |
//			   '-----------------------'       '-----------------------'

		default_layer {
			bindings = <
 &mt LALT TAB   &kp SQT   &kp COMMA &kp DOT  &kp P    &kp Y     &kp F     &kp G    &kp C     &kp R     &kp L  &mt RALT FSLH
 &mt LCTL EQUAL &kp A     &kp O     &kp E    &kp U    &kp I     &kp D     &kp H    &kp T     &kp N     &kp S  &mt RCTL MINUS
 &mt LSHFT CAPS &cosc     &kp Q     &kp J    &kp K    &kp X     &kp B     &kp M    &kp W     &kp V     &kp Z  &mt RSHFT CAPS
				    &kp ESC  TT(1)    &kp BSPC  &kp SPACE TT(2)    &kp RET
			>;
		};
		num_layer {
			bindings = <
 &trans         &kp GRAVE &none     &kp LBKT &kp RBKT &none     &none     &kp N7   &kp N8    &kp N9    &none  &kp BSLH
 &trans         &none     &none     &kp LPAR &kp RPAR &none     &none     &kp N4   &kp N5    &kp N6    &trans &trans
 &trans         &none     &none     &kp LBRC &kp RBRC &none     &none     &kp N1   &kp N2    &kp N3    &trans &trans
				    &trans   &trans   &trans    &trans    &kp N0   &kp DOT
			>;
		};
		nav_layer {
			bindings = <
 &trans         &kp F1    &kp F2    &kp F3   &kp F4   &kp PSCRN &none     &kp HOME &kp UP    &kp PG_UP &none  &trans
 &trans         &kp F5    &kp F6    &kp F7   &kp F8   &kp INS   &none     &kp LEFT &kp K_APP &kp RIGHT &none  &trans
 &trans         &kp F9    &kp F10   &kp F11  &kp F12  &none     &none     &kp END  &kp DOWN  &kp PG_DN &none  &trans
				    &trans   &trans   &kp DEL   &trans    &trans   &trans
			>;
		};
	};
};
